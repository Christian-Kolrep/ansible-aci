# Test code for the ACI modules
# Copyright: (c) 2023, Christian Kolrep (@Christian-Kolrep)

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an ACI APIC host, ACI username and ACI password
  fail:
    msg: 'Please define the following variables: aci_hostname, aci_username and aci_password.'
  when: aci_hostname is not defined or aci_username is not defined or aci_password is not defined

# CLEAN ENVIRONMENT
- name: Set vars
  set_fact:
    aci_info: &aci_info
      host: "{{ aci_hostname }}"
      username: "{{ aci_username }}"
      password: "{{ aci_password }}"
      validate_certs: '{{ aci_validate_certs | default(false) }}'
      use_ssl: '{{ aci_use_ssl | default(true) }}'
      use_proxy: '{{ aci_use_proxy | default(true) }}'
      output_level: '{{ aci_output_level | default("debug") }}'

- name: Query system information
  aci_system:
    <<: *aci_info
    id: 1
    state: query
  register: version

- name: Verify Cloud and Non-Cloud Sites in use.
  include_tasks: ../../../../../../integration/targets/aci_cloud_provider/tasks/main.yml

- name: Execute tasks only for non-cloud sites
  when: query_cloud.current == []  # This condition will execute only non-cloud sites
  block:  # block specifies execution of tasks within, based on conditions
  - name: ensure tenant exists for tests to kick off
    cisco.aci.aci_tenant: &aci_tenant_present
      <<: *aci_info
      tenant: ansible_test_useg
      state: present
    register: tenant_present

  - name: ensure ap exists for tests to kick off
    cisco.aci.aci_ap: &aci_ap_present
      <<: *aci_tenant_present
      ap: anstest
    register: ap_present

  - name: ensure bd exists for tests to kick off
    cisco.aci.aci_bd: &aci_bd_present
      <<: *aci_tenant_present
      bd: anstest
    register: bd_present

  - name: ensure useg epg exists for tests to kick off
    cisco.aci.aci_epg: &aci_epg_present
      <<: *aci_ap_present
      epg: anstest
      bd: anstest
      useg: yes
    register: epg_present

  - name: ensure useg attribute of type vm_custom_attr not exists for tests to kick off
    cisco.aci.aci_epg_useg_attribute:
      <<: *aci_ap_present
      epg: anstest
      useg_attribute_name: anstest
      useg_attribute_type: vm_custom_attr
      state: absent

  - name: Add a useg attribute of type vm_custom_attr ( check mode )
    cisco.aci.aci_epg_useg_attribute: &aci_vm_custom_attr_present
      <<: *aci_ap_present
      epg: anstest
      useg_attribute_name: anstest
      useg_attribute_type: vm_custom_attr
      operator: equals
      custom_attribute: ENVIRONMENT
      value: PROD
    check_mode: true
    register: vm_custom_attr_present_check_mode

  - name: Add a useg attribute of type vm_custom_attr - creation works
    cisco.aci.aci_epg_useg_attribute:
      <<: *aci_vm_custom_attr_present
    register: vm_custom_attr_present

  - name: Add a 2nd useg attribute of type vm_custom_attr
    cisco.aci.aci_epg_useg_attribute:
      <<: *aci_ap_present
      epg: anstest
      useg_attribute_name: anstest2
      useg_attribute_type: vm_custom_attr
      operator: equals
      custom_attribute: TIER
      value: GOLD
      state: present
    register: vm_custom_attr_present_2

  - name: Add a useg attribute of type vm_custom_attr - idempotency works
    cisco.aci.aci_epg_useg_attribute:
      <<: *aci_vm_custom_attr_present 
    register: vm_custom_attr_present_idempotent

  - name: Update a useg attribute of type vm_custom_attr
    cisco.aci.aci_epg_useg_attribute:
      <<: *aci_vm_custom_attr_present
      operator: contains
      custom_attribute: OS
      value: REDHAT

    register: vm_custom_attr_update

  - name: Add a useg attribute of type vm_custom_attr - missing params
    cisco.aci.aci_epg_useg_attribute:
      <<: *aci_vm_custom_attr_present
      epg: "{{ fake_var | default(omit) }}"
    ignore_errors: true
    register: vm_custom_attr_present_missing_params

  - name: vm_custom_attr present assertions
    assert:
      that:
        - vm_custom_attr_present_check_mode is changed
        - vm_custom_attr_present is changed
        - vm_custom_attr_present.previous == []
        - vm_custom_attr_present.sent.fvVmAttr.attributes.name == 'anstest'
        - vm_custom_attr_present.sent.fvVmAttr.attributes.labelName == 'ENVIRONMENT'
        - vm_custom_attr_present.sent.fvVmAttr.attributes.value == 'PROD'
        - vm_custom_attr_present.sent.fvVmAttr.attributes.type == 'custom-label'
        - vm_custom_attr_present.sent.fvVmAttr.attributes.operator == 'equals'
        - vm_custom_attr_present.current.0.fvVmAttr.attributes.annotation == 'orchestrator:ansible'
        - vm_custom_attr_present_idempotent is not changed
        - vm_custom_attr_present_idempotent.sent == {}
        - vm_custom_attr_update is changed
        - vm_custom_attr_update.sent.fvVmAttr.attributes.operator == 'contains'
        - vm_custom_attr_update.sent.fvVmAttr.attributes.labelName == 'OS'
        - vm_custom_attr_update.sent.fvVmAttr.attributes.value == 'REDHAT'
        - vm_custom_attr_present_missing_params is failed
        - 'vm_custom_attr_present_missing_params.msg == "state is present but all of the following are missing: epg"'

  - name: Query a useg attribute of type vm_custom_attr
    cisco.aci.aci_epg_useg_attribute:
      <<: *aci_vm_custom_attr_present
      state: query
    register: vm_custom_attr_query

  - name: Query all useg attribute of type vm_custom_attr
    cisco.aci.aci_epg_useg_attribute:
      <<: *aci_vm_custom_attr_present
      useg_attribute_name: "{{ fake_var | default(omit) }}"
      state: query
    register: vm_custom_attr_query_all

  - name: vm_custom_attr query assertions
    assert:
      that:
        - vm_custom_attr_query is not changed
        - vm_custom_attr_query.current | length == 1
        - vm_custom_attr_query_all is not changed
        - vm_custom_attr_query_all.current.0.fvCrtrn.children | length > 1

  - name: Delete a useg attribute of type vm_custom_attr ( check mode )
    cisco.aci.aci_epg_useg_attribute: &aci_vm_custom_attr_absent
      <<: *aci_vm_custom_attr_present
      state: absent
    check_mode: true
    register: vm_custom_attr_absent_check_mode

  - name: Delete a useg attribute of type vm_custom_attr - delete works
    cisco.aci.aci_epg_useg_attribute:
      <<: *aci_vm_custom_attr_absent
    register: vm_custom_attr_absent

  - name: Delete a useg attribute of type vm_custom_attr - idempotency works
    cisco.aci.aci_epg_useg_attribute:
      <<: *aci_vm_custom_attr_absent
    register: vm_custom_attr_absent_idempotent

  - name: Delete a useg attribute of type vm_custom_attr - missing params
    cisco.aci.aci_epg_useg_attribute:
      <<: *aci_vm_custom_attr_absent
      epg: "{{ fake_var | default(omit) }}"
      state: absent
    ignore_errors: true
    register: vm_custom_attr_absent_missing_params

  - name: vm_custom_attr absent assertions
    assert:
      that:
        - vm_custom_attr_absent_check_mode is changed
        - vm_custom_attr_absent_check_mode.previous != []
        - vm_custom_attr_absent is changed
        - vm_custom_attr_absent.previous == vm_custom_attr_absent_check_mode.previous
        - vm_custom_attr_absent_idempotent is not changed
        - vm_custom_attr_absent_idempotent.previous == []
        - vm_custom_attr_absent_missing_params is failed
        - 'vm_custom_attr_absent_missing_params.msg == "state is absent but all of the following are missing: epg"'

  - name: remove tenant - cleanup
    cisco.aci.aci_tenant:
      <<: *aci_tenant_present
      state: absent
    when: tenant_present is changed
